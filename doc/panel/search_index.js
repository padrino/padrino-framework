var search_data = {"index":{"searchIndex":["padrino","admin","accesscontrol","authorization","base","projectmodule","helpers","authenticationhelpers","viewhelpers","utils","crypt","application","helpers","assettaghelpers","domhelpers","formhelpers","formathelpers","numberhelpers","outputhelpers","renderhelpers","taghelpers","translationhelpers","logger","rack","mailer","base","helpers","classmethods","mime","mounter","reloader","rack","stat","rendering","classmethods","instancemethods","router","routing","classmethods","instancemethods","parent","showexceptions","tasks","<<()","==()","after_load()","allow()","allowed?()","allowed?()","app_constant()","asset_path()","before_load()","bin()","block_is_template?()","button_tag()","button_to()","cache_template_file!()","calculate_paths()","call()","call()","call()","called_from()","capture_html()","changed?()","check_box_tag()","close()","colored_level()","concat_content()","content_for()","content_tag()","content_type()","controller()","controllers()","current_account()","custom_dependencies()","decrypt()","default_configuration!()","default_errors!()","default_filters!()","default_routes!()","defaults()","delete()","deliver()","deliver()","dependency_paths()","distance_of_time_in_words()","dom_class()","dom_id()","email()","email()","email()","encrypt()","ensure_app_file!()","ensure_app_object!()","error_message_on()","error_messages_for()","escape_html()","exclude()","exclude_constants()","favicon_tag()","feed_tag()","fetch_layout_path()","fetch_template_file()","field_set_tag()","fields_for()","figure_path()","file_field_tag()","files()","find_view_path()","flash_tag()","flush()","form_for()","form_tag()","frame_class_with_padrino()","get()","h()","h!()","head()","hidden_field_tag()","hidden_form_method_field()","highlight()","host()","human_name()","image_path()","image_submit_tag()","image_tag()","include_constants()","included()","input_tag()","insert_mounted_app()","javascript_include_tag()","js_escape_html()","l()","label_tag()","layout()","link_to()","load!()","load_dependencies()","load_paths()","loaded?()","localize()","locate_app_file()","locate_app_object()","logged_in?()","logger()","login_required()","mail_to()","mailer()","mailers()","map()","map_onto()","mat()","message()","meta_tag()","mime_type()","model_attribute_translate()","model_translate()","mount()","mount_core()","mounted_apps()","mounted_root()","mt()","named_routes()","new()","new()","new()","new()","new()","new()","new()","number_to_currency()","number_to_human_size()","number_to_percentage()","number_with_delimiter()","number_with_precision()","options_for_select()","options_from_collection()","padrino_admin_translate()","parent()","partial()","password_field_tag()","pat()","path()","pluralize()","post()","project_module()","project_modules()","project_modules()","protect()","push()","put()","radio_button_tag()","redirect_back_or_default()","register_initializers()","registered()","registered()","registered()","registered()","registered()","registered_mailers()","reload!()","reload!()","reload!()","remove_constant()","render_partial()","require_dependencies()","require_load_paths()","reset_routes!()","roles()","roles_for()","rotation()","router()","routes()","routes()","ruby_command()","run!()","safe_load()","safe_stat()","sanitize_html()","select_tag()","set_color()","set_current_account()","set_load_paths()","setup!()","setup_application!()","simple_format()","sort!()","static!()","static_file?()","store_location!()","strip_tags()","stylesheet_link_tag()","submit_tag()","t()","tag()","text_area_tag()","text_field_tag()","time_ago_in_words()","to()","translate()","truncate()","url()","url()","url_for()","url_for()","urls()","version()","word_wrap()","yield_content()","readme.rdoc","padrino-admin.rb","access_control.rb","authentication_helpers.rb","view_helpers.rb","crypt.rb","readme.rdoc","application.rb","mounter.rb","rendering.rb","routing.rb","showexceptions.rb","caller.rb","command.rb","loader.rb","logger.rb","reloader.rb","router.rb","tasks.rb","version.rb","readme.rdoc","padrino-helpers.rb","asset_tag_helpers.rb","dom_helpers.rb","abstract_form_builder.rb","standard_form_builder.rb","form_helpers.rb","format_helpers.rb","number_helpers.rb","output_helpers.rb","render_helpers.rb","tag_helpers.rb","translation_helpers.rb","readme.rdoc","padrino-mailer.rb","base.rb","ext.rb","helpers.rb","mime.rb"],"longSearchIndex":["padrino-mailer/lib/padrino-mailer/mime.rb","padrino","padrino::admin","padrino::admin::accesscontrol","padrino::admin::accesscontrol","padrino::admin::accesscontrol","padrino::admin","padrino::admin::helpers","padrino::admin::helpers","padrino::admin","padrino::admin::utils","padrino","padrino","padrino::helpers","padrino::helpers","padrino::helpers","padrino::helpers","padrino::helpers","padrino::helpers","padrino::helpers","padrino::helpers","padrino::helpers","padrino","padrino::logger","padrino","padrino::mailer","padrino::mailer","padrino::mailer::helpers","padrino::mailer","padrino","padrino","padrino::reloader","padrino::reloader","padrino","padrino::rendering","padrino::rendering","padrino","padrino","padrino::routing","padrino::routing","padrino::routing","padrino","padrino","padrino::logger","padrino::mounter","padrino","padrino::admin::accesscontrol::authorization","padrino::admin::accesscontrol::base","padrino::admin::helpers::authenticationhelpers","padrino::mounter","padrino::helpers::assettaghelpers","padrino","padrino","padrino::helpers::outputhelpers","padrino::helpers::formhelpers","padrino::helpers::assettaghelpers","padrino::rendering::classmethods","padrino::application","padrino::logger::rack","padrino::reloader::rack","padrino::router","padrino","padrino::helpers::outputhelpers","padrino::reloader::stat","padrino::helpers::formhelpers","padrino::logger","padrino::logger","padrino::helpers::outputhelpers","padrino::helpers::outputhelpers","padrino::helpers::taghelpers","padrino::routing::instancemethods","padrino::routing::classmethods","padrino::routing::classmethods","padrino::admin::helpers::authenticationhelpers","padrino","padrino::admin::utils::crypt","padrino::application","padrino::application","padrino::application","padrino::application","padrino::mailer::base","padrino::routing::classmethods","padrino::mailer::helpers","padrino::mailer::helpers::classmethods","padrino","padrino::helpers::formathelpers","padrino::helpers::domhelpers","padrino::helpers::domhelpers","padrino::mailer::base","padrino::mailer::helpers","padrino::mailer::helpers::classmethods","padrino::admin::utils::crypt","padrino::mounter","padrino::mounter","padrino::helpers::formhelpers","padrino::helpers::formhelpers","padrino::helpers::formathelpers","padrino::reloader","padrino::reloader","padrino::helpers::assettaghelpers","padrino::helpers::assettaghelpers","padrino::rendering::classmethods","padrino::rendering::classmethods","padrino::helpers::formhelpers","padrino::helpers::formhelpers","padrino::reloader::stat","padrino::helpers::formhelpers","padrino::tasks","padrino::application","padrino::helpers::assettaghelpers","padrino::logger","padrino::helpers::formhelpers","padrino::helpers::formhelpers","padrino::showexceptions","padrino::routing::classmethods","padrino::helpers::formathelpers","padrino::helpers::formathelpers","padrino::routing::classmethods","padrino::helpers::formhelpers","padrino::helpers::formhelpers","padrino::helpers::formathelpers","padrino::mounter","padrino::admin::accesscontrol::projectmodule","padrino::helpers::assettaghelpers","padrino::helpers::formhelpers","padrino::helpers::assettaghelpers","padrino::reloader","padrino::showexceptions","padrino::helpers::taghelpers","padrino","padrino::helpers::assettaghelpers","padrino::helpers::formathelpers","padrino::helpers::translationhelpers","padrino::helpers::formhelpers","padrino::rendering::classmethods","padrino::helpers::assettaghelpers","padrino","padrino","padrino::application","padrino","padrino::helpers::translationhelpers","padrino::mounter","padrino::mounter","padrino::admin::helpers::authenticationhelpers","padrino","padrino::admin::helpers::authenticationhelpers","padrino::helpers::assettaghelpers","padrino::mailer::helpers::classmethods","padrino::mailer::helpers::classmethods","padrino::router","padrino::mounter","padrino::admin::helpers::viewhelpers","padrino::mailer::base","padrino::helpers::assettaghelpers","padrino::mailer::mime","padrino::admin::helpers::viewhelpers","padrino::admin::helpers::viewhelpers","padrino","padrino","padrino","padrino","padrino::admin::helpers::viewhelpers","padrino::mounter","padrino::application","padrino::logger","padrino::logger::rack","padrino::mounter","padrino::reloader::rack","padrino::router","padrino::routing::parent","padrino::helpers::numberhelpers","padrino::helpers::numberhelpers","padrino::helpers::numberhelpers","padrino::helpers::numberhelpers","padrino::helpers::numberhelpers","padrino::helpers::formhelpers","padrino::helpers::formhelpers","padrino::admin::helpers::viewhelpers","padrino::routing::classmethods","padrino::helpers::renderhelpers","padrino::helpers::formhelpers","padrino::admin::helpers::viewhelpers","padrino::admin::accesscontrol::projectmodule","padrino::helpers::formathelpers","padrino::routing::classmethods","padrino::admin::accesscontrol::authorization","padrino::admin::accesscontrol::base","padrino::admin::helpers::authenticationhelpers","padrino::admin::accesscontrol::authorization","padrino::logger","padrino::routing::classmethods","padrino::helpers::formhelpers","padrino::admin::helpers::authenticationhelpers","padrino::application","padrino::admin::accesscontrol","padrino::helpers","padrino::mailer","padrino::rendering","padrino::routing","padrino::mailer::helpers::classmethods","padrino","padrino::application","padrino::reloader::stat","padrino::reloader::stat","padrino::helpers::renderhelpers","padrino","padrino::application","padrino::application","padrino::admin::accesscontrol::base","padrino::admin::accesscontrol::base","padrino::reloader::stat","padrino::routing::classmethods","padrino::application","padrino::mounter","padrino","padrino::application","padrino::reloader::stat","padrino::reloader::stat","padrino::helpers::formathelpers","padrino::helpers::formhelpers","padrino::logger","padrino::admin::helpers::authenticationhelpers","padrino","padrino::logger","padrino::application","padrino::helpers::formathelpers","padrino::router","padrino::routing::instancemethods","padrino::routing::instancemethods","padrino::admin::helpers::authenticationhelpers","padrino::helpers::formathelpers","padrino::helpers::assettaghelpers","padrino::helpers::formhelpers","padrino::helpers::translationhelpers","padrino::helpers::taghelpers","padrino::helpers::formhelpers","padrino::helpers::formhelpers","padrino::helpers::formathelpers","padrino::mounter","padrino::helpers::translationhelpers","padrino::helpers::formathelpers","padrino::routing::classmethods","padrino::routing::instancemethods","padrino::routing::classmethods","padrino::routing::instancemethods","padrino::routing::classmethods","padrino","padrino::helpers::formathelpers","padrino::helpers::outputhelpers","files/padrino-admin/readme_rdoc.html","files/padrino-admin/lib/padrino-admin_rb.html","files/padrino-admin/lib/padrino-admin/access_control_rb.html","files/padrino-admin/lib/padrino-admin/helpers/authentication_helpers_rb.html","files/padrino-admin/lib/padrino-admin/helpers/view_helpers_rb.html","files/padrino-admin/lib/padrino-admin/utils/crypt_rb.html","files/padrino-core/readme_rdoc.html","files/padrino-core/lib/padrino-core/application_rb.html","files/padrino-core/lib/padrino-core/application/mounter_rb.html","files/padrino-core/lib/padrino-core/application/rendering_rb.html","files/padrino-core/lib/padrino-core/application/routing_rb.html","files/padrino-core/lib/padrino-core/application/showexceptions_rb.html","files/padrino-core/lib/padrino-core/caller_rb.html","files/padrino-core/lib/padrino-core/command_rb.html","files/padrino-core/lib/padrino-core/loader_rb.html","files/padrino-core/lib/padrino-core/logger_rb.html","files/padrino-core/lib/padrino-core/reloader_rb.html","files/padrino-core/lib/padrino-core/router_rb.html","files/padrino-core/lib/padrino-core/tasks_rb.html","files/padrino-core/lib/padrino-core/version_rb.html","files/padrino-helpers/readme_rdoc.html","files/padrino-helpers/lib/padrino-helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/asset_tag_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/dom_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/form_builder/abstract_form_builder_rb.html","files/padrino-helpers/lib/padrino-helpers/form_builder/standard_form_builder_rb.html","files/padrino-helpers/lib/padrino-helpers/form_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/format_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/number_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/output_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/render_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/tag_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/translation_helpers_rb.html","files/padrino-mailer/readme_rdoc.html","files/padrino-mailer/lib/padrino-mailer_rb.html","files/padrino-mailer/lib/padrino-mailer/base_rb.html","files/padrino-mailer/lib/padrino-mailer/ext_rb.html","files/padrino-mailer/lib/padrino-mailer/helpers_rb.html","files/padrino-mailer/lib/padrino-mailer/mime_rb.html"],"info":[["Padrino","padrino-core/lib/padrino-core/reloader.rb","classes/Padrino.html"," < ","Manages current Padrino version for use in gem generation. We put this in a separate file so you can",1],["Admin","Padrino","classes/Padrino/Admin.html"," < ","Padrino::Admin is beautiful Ajax Admin, with these fatures: Orm Agnostic:: Adapters for datamapper, activerecord,",1],["AccessControl","Padrino::Admin","classes/Padrino/Admin/AccessControl.html"," < ","This module give to a padrino application an access control functionality ",1],["Authorization","Padrino::Admin::AccessControl","classes/Padrino/Admin/AccessControl/Authorization.html"," < Object","",1],["Base","Padrino::Admin::AccessControl","classes/Padrino/Admin/AccessControl/Base.html"," < Object","",1],["ProjectModule","Padrino::Admin::AccessControl","classes/Padrino/Admin/AccessControl/ProjectModule.html"," < Object","Project Module class ",1],["Helpers","Padrino::Admin","classes/Padrino/Admin/Helpers.html"," < ","",1],["AuthenticationHelpers","Padrino::Admin::Helpers","classes/Padrino/Admin/Helpers/AuthenticationHelpers.html"," < ","",1],["ViewHelpers","Padrino::Admin::Helpers","classes/Padrino/Admin/Helpers/ViewHelpers.html"," < ","",1],["Utils","Padrino::Admin","classes/Padrino/Admin/Utils.html"," < ","",1],["Crypt","Padrino::Admin::Utils","classes/Padrino/Admin/Utils/Crypt.html"," < ","This util it's used for encrypt/decrypt password. We want password decryptable because generally for",1],["Application","Padrino","classes/Padrino/Application.html"," < Sinatra::Application","Subclasses of this become independent Padrino applications (stemming from Sinatra::Application) These",1],["Helpers","Padrino","classes/Padrino/Helpers.html"," < ","This component provides a great deal of view helpers related to html markup generation. There are helpers",1],["AssetTagHelpers","Padrino::Helpers","classes/Padrino/Helpers/AssetTagHelpers.html"," < ","",1],["DomHelpers","Padrino::Helpers","classes/Padrino/Helpers/DomHelpers.html"," < ","",1],["FormHelpers","Padrino::Helpers","classes/Padrino/Helpers/FormHelpers.html"," < ","",1],["FormatHelpers","Padrino::Helpers","classes/Padrino/Helpers/FormatHelpers.html"," < ","",1],["NumberHelpers","Padrino::Helpers","classes/Padrino/Helpers/NumberHelpers.html"," < ","Provides methods for converting numbers into formatted strings. Methods are provided for phone numbers,",1],["OutputHelpers","Padrino::Helpers","classes/Padrino/Helpers/OutputHelpers.html"," < ","",1],["RenderHelpers","Padrino::Helpers","classes/Padrino/Helpers/RenderHelpers.html"," < ","",1],["TagHelpers","Padrino::Helpers","classes/Padrino/Helpers/TagHelpers.html"," < ","",1],["TranslationHelpers","Padrino::Helpers","classes/Padrino/Helpers/TranslationHelpers.html"," < ","",1],["Logger","Padrino","classes/Padrino/Logger.html"," < Object","Extensions to the built in Ruby logger. ==== Examples logger.debug \"foo\" logger.warn  \"bar\" ",1],["Rack","Padrino::Logger","classes/Padrino/Logger/Rack.html"," < Object","Padrino::Loggger::Rack forwards every request to an +app+ given, and logs a line in the Apache common",1],["Mailer","Padrino","classes/Padrino/Mailer.html"," < ","This component uses the 'mail' library to create a powerful but simple mailer system within Padrino (and",1],["Base","Padrino::Mailer","classes/Padrino/Mailer/Base.html"," < Object","This is the abstract class that other mailers will inherit from in order to send mail You can set the",1],["Helpers","Padrino::Mailer","classes/Padrino/Mailer/Helpers.html"," < ","",1],["ClassMethods","Padrino::Mailer::Helpers","classes/Padrino/Mailer/Helpers/ClassMethods.html"," < ","",1],["Mime","Padrino::Mailer","classes/Padrino/Mailer/Mime.html"," < ","",1],["Mounter","Padrino","classes/Padrino/Mounter.html"," < Object","Represents a particular mounted padrino application Stores the name of the application (app folder name)",1],["Reloader","Padrino","classes/Padrino/Reloader.html"," < ","High performance source code reloader middleware ",1],["Rack","Padrino::Reloader","classes/Padrino/Reloader/Rack.html"," < Object","This class acts as a Rack middleware to be added to the application stack. This middleware performs a",1],["Stat","Padrino::Reloader","classes/Padrino/Reloader/Stat.html"," < ","This reloader is suited for use in a many environments because each file will only be checked once and",1],["Rendering","Padrino","classes/Padrino/Rendering.html"," < ","Padrino enhances the Sinatra render method to have support for automatic template engine detection,",1],["ClassMethods","Padrino::Rendering","classes/Padrino/Rendering/ClassMethods.html"," < ","",1],["InstanceMethods","Padrino::Rendering","classes/Padrino/Rendering/InstanceMethods.html"," < ","",1],["Router","Padrino","classes/Padrino/Router.html"," < Object","This class is an extended version of Rack::URLMap Padrino::Router like Rack::URLMap dispatches in such",1],["Routing","Padrino","classes/Padrino/Routing.html"," < ","Padrino provides advanced routing definition support to make routes and url generation much easier. This",1],["ClassMethods","Padrino::Routing","classes/Padrino/Routing/ClassMethods.html"," < ","",1],["InstanceMethods","Padrino::Routing","classes/Padrino/Routing/InstanceMethods.html"," < ","",1],["Parent","Padrino::Routing","classes/Padrino/Routing/Parent.html"," < String","Keeps information about parent scope. ",1],["ShowExceptions","Padrino","classes/Padrino/ShowExceptions.html"," < ","This module extend Sinatra::ShowExceptions adding Padrino as \"Framework\" ",1],["Tasks","Padrino","classes/Padrino/Tasks.html"," < ","This module it's used for bootstrap with padrino rake thirdy party tasks, in your gem/plugin/extension",1],["<<","Padrino::Logger","classes/Padrino/Logger.html#M000058","(message = nil)","Directly append message to the log. ",2],["==","Padrino::Mounter","classes/Padrino/Mounter.html#M000069","(other)","Makes two Mounters equal if they have the same name and uri_root ",2],["after_load","Padrino","classes/Padrino.html#M000017","(&block)","Hooks to be called after a load/reload ==== Examples after_load do DataMapper.finalize end ",2],["allow","Padrino::Admin::AccessControl::Authorization","classes/Padrino/Admin/AccessControl/Authorization.html#M000127","(path)","Allow a specified path ",2],["allowed?","Padrino::Admin::AccessControl::Base","classes/Padrino/Admin/AccessControl/Base.html#M000125","(account=nil, path=nil)","Return true if the given account is allowed to see the given path. ",2],["allowed?","Padrino::Admin::Helpers::AuthenticationHelpers","classes/Padrino/Admin/Helpers/AuthenticationHelpers.html#M000139","()","Returns true if the +current_account+ is allowed to see the requested path For configure this role please",2],["app_constant","Padrino::Mounter","classes/Padrino/Mounter.html#M000072","()","Returns the class object for the app if defined, nil otherwise ",2],["asset_path","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000176","(kind, source)","Returns the path to the specified asset (css or javascript) ==== Examples # Generates: /javascripts/application.js?1269008689",2],["before_load","Padrino","classes/Padrino.html#M000016","(&block)","Hooks to be called before a load/reload ==== Examples before_load do pre_initialize_something end ",2],["bin","Padrino","classes/Padrino.html#M000027","(*args)","This method return the correct location of padrino bin or exec it using Kernel#system with the given",2],["block_is_template?","Padrino::Helpers::OutputHelpers","classes/Padrino/Helpers/OutputHelpers.html#M000155","(block)","Returns true if the block is from an ERB or HAML template; false otherwise. Used to determine if html",2],["button_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000211","(caption, options = {})","Constructs a button input from the given options ==== Examples button_tag \"Cancel\", :class => 'clear'",2],["button_to","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000167","(*args, &block)","Creates a form containing a single button that submits to the url. ==== Examples # Generates: # <form",2],["cache_template_file!","Padrino::Rendering::ClassMethods","classes/Padrino/Rendering/ClassMethods.html#M000111","(template_file, render_options)","Caches the template file for the given rendering options render_options = [template_path, content_type,",2],["calculate_paths","Padrino::Application","classes/Padrino/Application.html#M000044","()","Calculates any required paths after app_file and root have been properly configured Executes as part",2],["call","Padrino::Logger::Rack","classes/Padrino/Logger/Rack.html#M000060","(env)","",2],["call","Padrino::Reloader::Rack","classes/Padrino/Reloader/Rack.html#M000001","(env)","",2],["call","Padrino::Router","classes/Padrino/Router.html#M000015","(env)","",2],["called_from","Padrino","classes/Padrino.html#M000020","()","This adds the ablity to instantiate Padrino.load! after Padrino::Application definition. ",2],["capture_html","Padrino::Helpers::OutputHelpers","classes/Padrino/Helpers/OutputHelpers.html#M000153","(*args, &block)","Captures the html from a block of template code for erb or haml ==== Examples capture_html(&block) =>",2],["changed?","Padrino::Reloader::Stat","classes/Padrino/Reloader/Stat.html#M000006","()","Returns true if any file changes are detected and populates the MTIMES cache ",2],["check_box_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000207","(name, options={})","Constructs a check_box from the given options ==== Examples check_box_tag :remember_me, :value => 'Yes'",2],["close","Padrino::Logger","classes/Padrino/Logger.html#M000056","()","Close and remove the current log object. ",2],["colored_level","Padrino::Logger","classes/Padrino/Logger.html#M000053","(level)","Colorize our level ",2],["concat_content","Padrino::Helpers::OutputHelpers","classes/Padrino/Helpers/OutputHelpers.html#M000154","(text=\"\")","Outputs the given text to the templates buffer directly ==== Examples concat_content(\"This will be output",2],["content_for","Padrino::Helpers::OutputHelpers","classes/Padrino/Helpers/OutputHelpers.html#M000156","(key, content = nil, &block)","Capture a block or text of content to be rendered at a later time. Your blocks can also receive values,",2],["content_tag","Padrino::Helpers::TagHelpers","classes/Padrino/Helpers/TagHelpers.html#M000231","(*args, &block)","Creates an html tag with given name, content and options ==== Examples content_tag(:p, \"hello\", :class",2],["content_type","Padrino::Routing::InstanceMethods","classes/Padrino/Routing/InstanceMethods.html#M000106","(type=nil, params={})","Return the request format, this is useful when we need to respond to a given content_type like: ====",2],["controller","Padrino::Routing::ClassMethods","classes/Padrino/Routing/ClassMethods.html#M000082","(*args, &block)","Method for organize in a better way our routes like: controller :admin do get :index do; ...; end get",2],["controllers","Padrino::Routing::ClassMethods","classes/Padrino/Routing/ClassMethods.html#M000083","(*args, &block)","Alias for #controller",2],["current_account","Padrino::Admin::Helpers::AuthenticationHelpers","classes/Padrino/Admin/Helpers/AuthenticationHelpers.html#M000137","()","Returns the current_account, it's an instance of <tt>Account</tt> model ",2],["custom_dependencies","Padrino","classes/Padrino.html#M000024","(*globs)","Appends custom dependency patterns to the be loaded for Padrino ==== Examples Padrino.custom_dependencies(\"#{Padrino.root}/foo/bar/*.rb\")",2],["decrypt","Padrino::Admin::Utils::Crypt","classes/Padrino/Admin/Utils/Crypt.html#M000133","(password)","Decrypts the current string using the current key specified ",2],["default_configuration!","Padrino::Application","classes/Padrino/Application.html#M000040","()","Defines default settings for Padrino application ",2],["default_errors!","Padrino::Application","classes/Padrino/Application.html#M000043","()","This log errors for production environments ",2],["default_filters!","Padrino::Application","classes/Padrino/Application.html#M000042","()","This filter it's used for know the format of the request, and automatically set the content type. ",2],["default_routes!","Padrino::Application","classes/Padrino/Application.html#M000041","()","We need to add almost __sinatra__ images. ",2],["defaults","Padrino::Mailer::Base","classes/Padrino/Mailer/Base.html#M000240","(attributes=nil)","Defines the default attributes for a message in this mailer (including app-wide defaults) ==== Examples",2],["delete","Padrino::Routing::ClassMethods","classes/Padrino/Routing/ClassMethods.html#M000092","(path, *args, &bk)","",2],["deliver","Padrino::Mailer::Helpers","classes/Padrino/Mailer/Helpers.html#M000243","(mailer_name, message_name, *attributes)","Delivers a mailer message email with the given attributes ==== Examples deliver(:sample, :birthday, \"Joey\",",2],["deliver","Padrino::Mailer::Helpers::ClassMethods","classes/Padrino/Mailer/Helpers/ClassMethods.html#M000248","(mailer_name, message_name, *attributes)","Delivers a mailer message email with the given attributes ==== Examples deliver(:sample, :birthday, \"Joey\",",2],["dependency_paths","Padrino","classes/Padrino.html#M000023","()","Returns default list of path globs to load as dependencies ",2],["distance_of_time_in_words","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000191","(from_time, to_time = 0, include_seconds = false, options = {})","Reports the approximate distance in time between two Time or Date objects or integers as seconds. Set",2],["dom_class","Padrino::Helpers::DomHelpers","classes/Padrino/Helpers/DomHelpers.html#M000229","(object, prefix=nil)","Create DOM class name from given object. You can also specify optional  prefix. ==== Examples @user =",2],["dom_id","Padrino::Helpers::DomHelpers","classes/Padrino/Helpers/DomHelpers.html#M000228","(object, prefix=nil)","Create DOM id from given object. You can also specify optional prefix. ==== Examples @user = User.new",2],["email","Padrino::Mailer::Base","classes/Padrino/Mailer/Base.html#M000238","(name, &block)","Defines a mailer object allowing the definition of various email messages that can be delivered ====",2],["email","Padrino::Mailer::Helpers","classes/Padrino/Mailer/Helpers.html#M000242","(mail_attributes={}, &block)","Delivers an email with the given mail attributes (to, from, subject, cc, bcc, body, et.al) ==== Examples",2],["email","Padrino::Mailer::Helpers::ClassMethods","classes/Padrino/Mailer/Helpers/ClassMethods.html#M000249","(mail_attributes={}, &block)","Delivers an email with the given mail attributes (to, from, subject, cc, bcc, body, et.al) using settings",2],["encrypt","Padrino::Admin::Utils::Crypt","classes/Padrino/Admin/Utils/Crypt.html#M000134","(password)","Encrypts the current string using the current key and algorithm specified ",2],["ensure_app_file!","Padrino::Mounter","classes/Padrino/Mounter.html#M000073","()","Raises an exception unless app_file is located properly ",2],["ensure_app_object!","Padrino::Mounter","classes/Padrino/Mounter.html#M000074","()","Raises an exception unless app_obj is defined properly ",2],["error_message_on","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000200","(object, field, options={})","Returns a string containing the error message attached to the +method+ on the +object+ if one exists.",2],["error_messages_for","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000199","(*objects)","Constructs list html for the errors for a given symbol ==== Options :header_tag:: Used for the header",2],["escape_html","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000181","(text)","Returns escaped text to protect against malicious content ",2],["exclude","Padrino::Reloader","classes/Padrino/Reloader.html#M000002","()","Specified folders can be excluded from the code reload detection process. Default excluded directories",2],["exclude_constants","Padrino::Reloader","classes/Padrino/Reloader.html#M000003","()","Specified constants can be excluded from the code unloading process. Default excluded constants are:",2],["favicon_tag","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000171","(source,options={})","Generates a favicon link. looks inside images folder ==== Examples favicon_tag 'favicon.png' favicon_tag",2],["feed_tag","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000168","(mime, url, options={})","Creates a link tag that browsers and news readers can use to auto-detect an RSS or ATOM feed. === Options",2],["fetch_layout_path","Padrino::Rendering::ClassMethods","classes/Padrino/Rendering/ClassMethods.html#M000112","()","Retunrs the cached layout path. ",2],["fetch_template_file","Padrino::Rendering::ClassMethods","classes/Padrino/Rendering/ClassMethods.html#M000110","(render_options)","Returns the cached template file to render for a given url, content_type and locale. render_options =",2],["field_set_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000198","(*args, &block)","Constructs a field_set to group fields with given options ==== Examples field_set_tag(\"Office\", :class",2],["fields_for","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000195","(object, settings={}, &block)","Constructs form fields for an object using given or default form_builder Used within an existing form",2],["figure_path","Padrino::Reloader::Stat","classes/Padrino/Reloader/Stat.html#M000010","(file, paths)","Takes a relative or absolute +file+ name and a couple possible +paths+ that the +file+ might reside in.",2],["file_field_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000209","(name, options={})","Constructs a file field input from the given options ==== Examples file_field_tag :photo, :class => 'long'",2],["files","Padrino::Tasks","classes/Padrino/Tasks.html#M000032","()","Returns a list of files to handle with padrino rake ",2],["find_view_path","Padrino::Application","classes/Padrino/Application.html#M000048","()","Returns the path to the views directory from root by returning the first that is found ",2],["flash_tag","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000165","(kind, options={})","Creates a div to display the flash of given type if it exists ==== Examples # Generates: <div class=\"notice\">flash-notice</div>",2],["flush","Padrino::Logger","classes/Padrino/Logger.html#M000055","()","Flush the entire buffer to the log object. ",2],["form_for","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000194","(object, url, settings={}, &block)","Constructs a form for object using given or default form_builder ==== Examples form_for :user, '/register'",2],["form_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000196","(url, options={}, &block)","Constructs a form without object based on options ==== Examples form_tag '/register' do ... end ",2],["frame_class_with_padrino","Padrino::ShowExceptions","classes/Padrino/ShowExceptions.html#M000119","(frame)","",2],["get","Padrino::Routing::ClassMethods","classes/Padrino/Routing/ClassMethods.html#M000089","(path, *args, &block)","",2],["h","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000182","(text)","Alias for #escape_html",2],["h!","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000184","(text, blank_text = '&nbsp;')","Returns escaped text to protect against malicious content Returns blank if the text is empty ",2],["head","Padrino::Routing::ClassMethods","classes/Padrino/Routing/ClassMethods.html#M000093","(path, *args, &bk)","",2],["hidden_field_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000202","(name, options={})","Constructs a hidden field input from the given options ==== Examples hidden_field_tag :session_key, :value",2],["hidden_form_method_field","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000197","(desired_method)","Returns the hidden method field for 'put' and 'delete' forms Only 'get' and 'post' are allowed within",2],["highlight","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000190","(text, words, *args)","Highlights one or more words everywhere in text by inserting it into a :highlighter string. The highlighter",2],["host","Padrino::Mounter","classes/Padrino/Mounter.html#M000065","(mount_host)","Registers the mounted application onto Padrino for the given host ==== Examples Mounter.new(\"blog_app\").to(\"/blog\").host(\"blog.padrino.org\")",2],["human_name","Padrino::Admin::AccessControl::ProjectModule","classes/Padrino/Admin/AccessControl/ProjectModule.html#M000131","()","Returns the name of the project module. If a symbol it translate/humanize them for you. ",2],["image_path","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000175","(src)","Returns the path to the image, either relative or absolute. We search it in your +appname.public+ like",2],["image_submit_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000212","(source, options={})","Constructs a submit button from the given options ==== Examples submit_tag \"Create\", :class => 'success'",2],["image_tag","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000172","(url, options={})","Creates an image element with given url and options ==== Examples image_tag('icons/avatar.png') ",2],["include_constants","Padrino::Reloader","classes/Padrino/Reloader.html#M000004","()","Specified constants can be configured to be reloaded on every request. Default included constants are:",2],["included","Padrino::ShowExceptions","classes/Padrino/ShowExceptions.html#M000118","(base)","",2],["input_tag","Padrino::Helpers::TagHelpers","classes/Padrino/Helpers/TagHelpers.html#M000230","(type, options = {})","Creates an html input field with given type and options ==== Examples input_tag :text, :class => \"test\"",2],["insert_mounted_app","Padrino","classes/Padrino.html#M000077","(mounter)","Inserts a Mounter object into the mounted applications (avoids duplicates) ",2],["javascript_include_tag","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000174","(*sources)","Returns an html script tag for each of the sources provided. You can pass in the filename without extension",2],["js_escape_html","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000193","(html_content)","Used in xxxx.js.erb files to escape html so that it can be passed to javascript from Padrino js_escape_html(\"<h1>Hey</h1>\")",2],["l","Padrino::Helpers::TranslationHelpers","classes/Padrino/Helpers/TranslationHelpers.html#M000152","(*args)","Alias for #localize",2],["label_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000201","(name, options={}, &block)","Constructs a label tag from the given options ==== Examples label_tag :username, :class => 'long-label'",2],["layout","Padrino::Rendering::ClassMethods","classes/Padrino/Rendering/ClassMethods.html#M000109","(name=:layout, &block)","Use layout like rails does or if a block given then like sinatra. If used without a block, sets the current",2],["link_to","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000166","(*args, &block)","Creates a link element with given name, url and options ==== Examples link_to('click me', '/dashboard',",2],["load!","Padrino","classes/Padrino.html#M000018","()","Requires necessary dependencies as well as application files from root lib and models ",2],["load_dependencies","Padrino","classes/Padrino.html#M000025","(*paths)","Attempts to load all dependency libs that we need. If you use this method we can perform correctly a",2],["load_paths","Padrino::Application","classes/Padrino/Application.html#M000046","()","Returns the load_paths for the application (relative to the application root) ",2],["loaded?","Padrino","classes/Padrino.html#M000021","()","Return true if Padrino was loaded with Padrino.load! ",2],["localize","Padrino::Helpers::TranslationHelpers","classes/Padrino/Helpers/TranslationHelpers.html#M000151","(*args)","Delegates to I18n.localize with no additional functionality. ",2],["locate_app_file","Padrino::Mounter","classes/Padrino/Mounter.html#M000071","()","Returns the determined location of the mounted application main file ",2],["locate_app_object","Padrino::Mounter","classes/Padrino/Mounter.html#M000070","()","Locates and requires the file to load the app constant ",2],["logged_in?","Padrino::Admin::Helpers::AuthenticationHelpers","classes/Padrino/Admin/Helpers/AuthenticationHelpers.html#M000136","()","Returns true if +current_account+ is logged and active. ",2],["logger","Padrino","classes/Padrino.html#M000050","()","Returns the padrino logger ==== Examples logger.debug \"foo\" logger.warn \"bar\" ",2],["login_required","Padrino::Admin::Helpers::AuthenticationHelpers","classes/Padrino/Admin/Helpers/AuthenticationHelpers.html#M000141","()","Returns a helper useful in a +before_filter+ for check if an account are: +logged_in?+ and +allowed?+",2],["mail_to","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000169","(email, caption=nil, mail_options={})","Creates a mail link element with given name and caption ==== Examples # Generates: <a href=\"mailto:me@demo.com\">me@demo.com</a>",2],["mailer","Padrino::Mailer::Helpers::ClassMethods","classes/Padrino/Mailer/Helpers/ClassMethods.html#M000246","(name, &block)","Defines a mailer object allowing the definition of various email messages that can be delivered ====",2],["mailers","Padrino::Mailer::Helpers::ClassMethods","classes/Padrino/Mailer/Helpers/ClassMethods.html#M000247","(name, &block)","Alias for #mailer",2],["map","Padrino::Router","classes/Padrino/Router.html#M000014","(options={})","",2],["map_onto","Padrino::Mounter","classes/Padrino/Mounter.html#M000066","(router)","Maps Padrino application onto a Padrino::Router For use in constructing a Rack application @app.map_onto(router)",2],["mat","Padrino::Admin::Helpers::ViewHelpers","classes/Padrino/Admin/Helpers/ViewHelpers.html#M000225","(model, attribute)","Alias for #model_attribute_translate",2],["message","Padrino::Mailer::Base","classes/Padrino/Mailer/Base.html#M000239","(name, &block)","Alias for #email",2],["meta_tag","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000170","(content, options={})","Creates a meta element with the content and given options ==== Examples # Generates: <meta name=\"keywords\"",2],["mime_type","Padrino::Mailer::Mime","classes/Padrino/Mailer/Mime.html#M000251","(mime, fallback=:plain)","Returns Symbol with mime type if found, otherwise use +fallback+. +mime+ should be the content type like",2],["model_attribute_translate","Padrino::Admin::Helpers::ViewHelpers","classes/Padrino/Admin/Helpers/ViewHelpers.html#M000224","(model, attribute)","Translate attribute name for the given model ==== Examples # => t(\"models.account.email\", :default =>",2],["model_translate","Padrino::Admin::Helpers::ViewHelpers","classes/Padrino/Admin/Helpers/ViewHelpers.html#M000226","(model)","Translate model name ==== Examples # => t(\"models.account.name\", :default => \"Account\") mt(:account)",2],["mount","Padrino","classes/Padrino.html#M000079","(name, options={})","Mounts a new sub-application onto Padrino project Padrino.mount(\"blog_app\").to(\"/blog\") ",2],["mount_core","Padrino","classes/Padrino.html#M000078","(*args)","Mounts the core application onto Padrino project with given app settings (file, class, root) ==== Examples",2],["mounted_apps","Padrino","classes/Padrino.html#M000076","()","Returns the mounted padrino applications (MountedApp objects) ",2],["mounted_root","Padrino","classes/Padrino.html#M000075","(*args)","Returns the root to the mounted apps base directory ",2],["mt","Padrino::Admin::Helpers::ViewHelpers","classes/Padrino/Admin/Helpers/ViewHelpers.html#M000227","(model)","Alias for #model_translate",2],["named_routes","Padrino::Mounter","classes/Padrino/Mounter.html#M000068","()","Returns the basic route information for each named route ",2],["new","Padrino::Application","classes/Padrino/Application.html#M000034","(*args, &bk)","Hooks into when a new instance of the application is created This is used because putting the configuration",2],["new","Padrino::Logger","classes/Padrino/Logger.html#M000052","(options={})","To initialize the logger you create a new object, proxies to set_log. ==== Options :stream:: Either an",2],["new","Padrino::Logger::Rack","classes/Padrino/Logger/Rack.html#M000059","(app)","",2],["new","Padrino::Mounter","classes/Padrino/Mounter.html#M000063","(name, options={})","",2],["new","Padrino::Reloader::Rack","classes/Padrino/Reloader/Rack.html#M000000","(app, cooldown = 1)","",2],["new","Padrino::Router","classes/Padrino/Router.html#M000012","(*mapping, &block)","",2],["new","Padrino::Routing::Parent","classes/Padrino/Routing/Parent.html#M000080","(value, options={})","",2],["number_to_currency","Padrino::Helpers::NumberHelpers","classes/Padrino/Helpers/NumberHelpers.html#M000217","(number, options = {})","Formats a +number+ into a currency string (e.g., $13.65). You can customize the format in the +options+",2],["number_to_human_size","Padrino::Helpers::NumberHelpers","classes/Padrino/Helpers/NumberHelpers.html#M000221","(number, *args)","Formats the bytes in +size+ into a more understandable representation (e.g., giving it 1500 yields 1.5",2],["number_to_percentage","Padrino::Helpers::NumberHelpers","classes/Padrino/Helpers/NumberHelpers.html#M000218","(number, options = {})","Formats a +number+ as a percentage string (e.g., 65%). You can customize the format in the +options+",2],["number_with_delimiter","Padrino::Helpers::NumberHelpers","classes/Padrino/Helpers/NumberHelpers.html#M000219","(number, *args)","Formats a +number+ with grouped thousands using +delimiter+ (e.g., 12,324). You can customize the format",2],["number_with_precision","Padrino::Helpers::NumberHelpers","classes/Padrino/Helpers/NumberHelpers.html#M000220","(number, *args)","Formats a +number+ with the specified level of <tt>:precision</tt> (e.g., 112.32 has a precision of 2).",2],["options_for_select","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000214","(option_items, selected_value=nil)","Returns the options tags for a select based on the given option items ",2],["options_from_collection","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000213","(collection, fields)","Returns an array of option items for a select field based on the given collection fields is an array",2],["padrino_admin_translate","Padrino::Admin::Helpers::ViewHelpers","classes/Padrino/Admin/Helpers/ViewHelpers.html#M000222","(word, default=nil)","Translate a given word for padrino admin ==== Examples # => t(\"padrino.admin.profile\",  :default => \"Profile\")",2],["parent","Padrino::Routing::ClassMethods","classes/Padrino/Routing/ClassMethods.html#M000084","(name, options={})","Provides many parents with shallowing. ==== Examples controllers :product do parent :shop, :optional",2],["partial","Padrino::Helpers::RenderHelpers","classes/Padrino/Helpers/RenderHelpers.html#M000235","(template, options={})","Partials implementation which includes collections support ==== Examples partial 'photo/item', :object",2],["password_field_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000205","(name, options={})","Constructs a password field input from the given options ==== Examples password_field_tag :password,",2],["pat","Padrino::Admin::Helpers::ViewHelpers","classes/Padrino/Admin/Helpers/ViewHelpers.html#M000223","(word, default=nil)","Alias for #padrino_admin_translate",2],["path","Padrino::Admin::AccessControl::ProjectModule","classes/Padrino/Admin/AccessControl/ProjectModule.html#M000132","(prefix=nil)","Return the path of the project module. If a prefix given will be prepended. ==== Examples # => /accounts/new",2],["pluralize","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000187","(count, singular, plural = nil)","Attempts to pluralize the singular word unless count is 1. If plural is supplied, it will use that when",2],["post","Padrino::Routing::ClassMethods","classes/Padrino/Routing/ClassMethods.html#M000091","(path, *args, &bk)","",2],["project_module","Padrino::Admin::AccessControl::Authorization","classes/Padrino/Admin/AccessControl/Authorization.html#M000129","(name, path)","Create a project module ",2],["project_modules","Padrino::Admin::AccessControl::Base","classes/Padrino/Admin/AccessControl/Base.html#M000124","(account)","Return an array of project_modules ",2],["project_modules","Padrino::Admin::Helpers::AuthenticationHelpers","classes/Padrino/Admin/Helpers/AuthenticationHelpers.html#M000140","()","Returns project modules for the current account ",2],["protect","Padrino::Admin::AccessControl::Authorization","classes/Padrino/Admin/AccessControl/Authorization.html#M000128","(path)","Protect access from ",2],["push","Padrino::Logger","classes/Padrino/Logger.html#M000057","(message = nil, level = nil)","Appends a message to the log. The methods yield to an optional block and the output of this block will",2],["put","Padrino::Routing::ClassMethods","classes/Padrino/Routing/ClassMethods.html#M000090","(path, *args, &bk)","",2],["radio_button_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000208","(name, options={})","Constructs a radio_button from the given options ==== Examples radio_button_tag :remember_me, :value",2],["redirect_back_or_default","Padrino::Admin::Helpers::AuthenticationHelpers","classes/Padrino/Admin/Helpers/AuthenticationHelpers.html#M000143","(default)","Redirect the account to the page that requested an authentication or if the account is not allowed/logged",2],["register_initializers","Padrino::Application","classes/Padrino/Application.html#M000045","()","Requires the Padrino middleware ",2],["registered","Padrino::Admin::AccessControl","classes/Padrino/Admin/AccessControl.html#M000120","(app)","",2],["registered","Padrino::Helpers","classes/Padrino/Helpers.html#M000148","(app)","",2],["registered","Padrino::Mailer","classes/Padrino/Mailer.html#M000234","(app)","",2],["registered","Padrino::Rendering","classes/Padrino/Rendering.html#M000108","(app)","",2],["registered","Padrino::Routing","classes/Padrino/Routing.html#M000081","(app)","",2],["registered_mailers","Padrino::Mailer::Helpers::ClassMethods","classes/Padrino/Mailer/Helpers/ClassMethods.html#M000245","()","Returns all registered mailers for this application ",2],["reload!","Padrino","classes/Padrino.html#M000019","()","Method for reloading required applications and their files ",2],["reload!","Padrino::Application","classes/Padrino/Application.html#M000035","()","Reloads the application files from all defined load paths This method is used from our Padrino Reloader",2],["reload!","Padrino::Reloader::Stat","classes/Padrino/Reloader/Stat.html#M000005","()","Reload all files with changes detected. ",2],["remove_constant","Padrino::Reloader::Stat","classes/Padrino/Reloader/Stat.html#M000008","(const)","Removes the specified class and constant. ",2],["render_partial","Padrino::Helpers::RenderHelpers","classes/Padrino/Helpers/RenderHelpers.html#M000236","(template, options={})","Alias for #partial",2],["require_dependencies","Padrino","classes/Padrino.html#M000022","(*paths)","Attempts to require all dependency libs that we need. If you use this method we can perform correctly",2],["require_load_paths","Padrino::Application","classes/Padrino/Application.html#M000047","()","Requires all files within the application load paths ",2],["reset_routes!","Padrino::Application","classes/Padrino/Application.html#M000036","()","Resets application routes to only routes not defined by the user ==== Examples MyApp.reset_routes! ",2],["roles","Padrino::Admin::AccessControl::Base","classes/Padrino/Admin/AccessControl/Base.html#M000123","()","Return an array of roles ",2],["roles_for","Padrino::Admin::AccessControl::Base","classes/Padrino/Admin/AccessControl/Base.html#M000122","(*roles, &block)","We map project modules for a given role or roles ",2],["rotation","Padrino::Reloader::Stat","classes/Padrino/Reloader/Stat.html#M000009","()","Searches Ruby files in your +Padrino.root+ and monitors them for any changes. ",2],["router","Padrino::Routing::ClassMethods","classes/Padrino/Routing/ClassMethods.html#M000085","()","Using HTTPRouter, for features and configurations see: http://github.com/joshbuddy/http_router ==== Examples",2],["routes","Padrino::Application","classes/Padrino/Application.html#M000037","()","Returns the routes of our app. ==== Examples MyApp.routes ",2],["routes","Padrino::Mounter","classes/Padrino/Mounter.html#M000067","()","Returns the route objects for the mounted application ",2],["ruby_command","Padrino","classes/Padrino.html#M000028","()","Return the path to the ruby interpreter taking into account multiple installations and windows extensions.",2],["run!","Padrino::Application","classes/Padrino/Application.html#M000039","(options={})","Run the Padrino app as a self-hosted server using Thin, Mongrel or WEBrick (in that order) ",2],["safe_load","Padrino::Reloader::Stat","classes/Padrino/Reloader/Stat.html#M000007","(file, mtime=nil)","A safe Kernel::load which issues the necessary hooks depending on results ",2],["safe_stat","Padrino::Reloader::Stat","classes/Padrino/Reloader/Stat.html#M000011","(file)","",2],["sanitize_html","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000183","(text)","Alias for #escape_html",2],["select_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000206","(name, options={})","Constructs a check_box from the given options ==== Examples options = [['caption', 'value'], ['Green',",2],["set_color","Padrino::Logger","classes/Padrino/Logger.html#M000054","(string, color, bold=false)","Set a color for our string. Color can be a symbol/string ",2],["set_current_account","Padrino::Admin::Helpers::AuthenticationHelpers","classes/Padrino/Admin/Helpers/AuthenticationHelpers.html#M000138","(account=nil)","Override the current_account, you must provide an instance of Account Model ==== Examples: set_current_account(Account.authenticate(params[:email],",2],["set_load_paths","Padrino","classes/Padrino.html#M000026","(*paths)","Concat to $LOAD_PATH the given paths ",2],["setup!","Padrino::Logger","classes/Padrino/Logger.html#M000051","()","Setup a new logger ",2],["setup_application!","Padrino::Application","classes/Padrino/Application.html#M000038","()","Setup the application by registering initializers, load paths and logger Invoked automatically when an",2],["simple_format","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000186","(text, html_options={})","Returns text transformed into HTML using simple formatting rules. Two or more consecutive newlines(\\n\\n)",2],["sort!","Padrino::Router","classes/Padrino/Router.html#M000013","()","",2],["static!","Padrino::Routing::InstanceMethods","classes/Padrino/Routing/InstanceMethods.html#M000105","()","Method for deliver static files. ",2],["static_file?","Padrino::Routing::InstanceMethods","classes/Padrino/Routing/InstanceMethods.html#M000104","(path_info)","This is mostly just a helper so request.path_info isn't changed when serving files from the public directory",2],["store_location!","Padrino::Admin::Helpers::AuthenticationHelpers","classes/Padrino/Admin/Helpers/AuthenticationHelpers.html#M000142","()","Store in session[:return_to] the env['HTTP_REFERER'] ",2],["strip_tags","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000185","(html)","Strips all HTML tags from the html ",2],["stylesheet_link_tag","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000173","(*sources)","Returns an html script tag for each of the sources provided. You can pass in the filename without extension",2],["submit_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000210","(caption=\"Submit\", options={})","Constructs a submit button from the given options ==== Examples submit_tag \"Create\", :class => 'success'",2],["t","Padrino::Helpers::TranslationHelpers","classes/Padrino/Helpers/TranslationHelpers.html#M000150","(*args)","Alias for #translate",2],["tag","Padrino::Helpers::TagHelpers","classes/Padrino/Helpers/TagHelpers.html#M000232","(name, options={})","Creates an html tag with the given name and options ==== Examples tag(:br, :style => 'clear:both') tag(:p,",2],["text_area_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000204","(name, options={})","Constructs a text area input from the given options ==== Examples text_area_tag :username, :class =>",2],["text_field_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000203","(name, options={})","Constructs a text field input from the given options ==== Examples text_field_tag :username, :class =>",2],["time_ago_in_words","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000192","(from_time, include_seconds = false)","Like distance_of_time_in_words, but where <tt>to_time</tt> is fixed to <tt>Time.now</tt>. ==== Examples",2],["to","Padrino::Mounter","classes/Padrino/Mounter.html#M000064","(mount_url)","Registers the mounted application onto Padrino ==== Examples Mounter.new(\"blog_app\").to(\"/blog\") ",2],["translate","Padrino::Helpers::TranslationHelpers","classes/Padrino/Helpers/TranslationHelpers.html#M000149","(*args)","Delegates to I18n.translate with no additional functionality. ",2],["truncate","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000188","(text, options={})","Truncates a given text after a given :length if text is longer than :length (defaults to 30). The last",2],["url","Padrino::Routing::ClassMethods","classes/Padrino/Routing/ClassMethods.html#M000087","(*args)","Instance method for url generation like: ==== Examples url(:show, :id => 1) url(:show, 1) url(:show,",2],["url","Padrino::Routing::InstanceMethods","classes/Padrino/Routing/InstanceMethods.html#M000102","(*args)","Instance method for url generation like: ==== Examples url(:show, :id => 1) url(:show, :name => :test)",2],["url_for","Padrino::Routing::ClassMethods","classes/Padrino/Routing/ClassMethods.html#M000088","(*args)","Alias for #url",2],["url_for","Padrino::Routing::InstanceMethods","classes/Padrino/Routing/InstanceMethods.html#M000103","(*args)","Alias for #url",2],["urls","Padrino::Routing::ClassMethods","classes/Padrino/Routing/ClassMethods.html#M000086","()","Alias for #router",2],["version","Padrino","classes/Padrino.html#M000029","()","Return the current Padrino version ",2],["word_wrap","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000189","(text, *args)","Wraps the text into lines no longer than line_width width. This method breaks on the first whitespace",2],["yield_content","Padrino::Helpers::OutputHelpers","classes/Padrino/Helpers/OutputHelpers.html#M000157","(key, *args)","Render the captured content blocks for a given key. You can also pass values to the content blocks by",2],["README.rdoc","files/padrino-admin/README_rdoc.html","files/padrino-admin/README_rdoc.html","","= Admin Dashboard and Authentication (padrino-admin)  === Overview  Padrino has a beautiful Admin management",3],["padrino-admin.rb","files/padrino-admin/lib/padrino-admin_rb.html","files/padrino-admin/lib/padrino-admin_rb.html","","",3],["access_control.rb","files/padrino-admin/lib/padrino-admin/access_control_rb.html","files/padrino-admin/lib/padrino-admin/access_control_rb.html","","",3],["authentication_helpers.rb","files/padrino-admin/lib/padrino-admin/helpers/authentication_helpers_rb.html","files/padrino-admin/lib/padrino-admin/helpers/authentication_helpers_rb.html","","",3],["view_helpers.rb","files/padrino-admin/lib/padrino-admin/helpers/view_helpers_rb.html","files/padrino-admin/lib/padrino-admin/helpers/view_helpers_rb.html","","",3],["crypt.rb","files/padrino-admin/lib/padrino-admin/utils/crypt_rb.html","files/padrino-admin/lib/padrino-admin/utils/crypt_rb.html","","",3],["README.rdoc","files/padrino-core/README_rdoc.html","files/padrino-core/README_rdoc.html","","= Padrino (padrino-core)  Padrino is the godfather of Sinatra.  == Preface  Padrino is a ruby framework",3],["application.rb","files/padrino-core/lib/padrino-core/application_rb.html","files/padrino-core/lib/padrino-core/application_rb.html","","",3],["mounter.rb","files/padrino-core/lib/padrino-core/application/mounter_rb.html","files/padrino-core/lib/padrino-core/application/mounter_rb.html","","",3],["rendering.rb","files/padrino-core/lib/padrino-core/application/rendering_rb.html","files/padrino-core/lib/padrino-core/application/rendering_rb.html","","",3],["routing.rb","files/padrino-core/lib/padrino-core/application/routing_rb.html","files/padrino-core/lib/padrino-core/application/routing_rb.html","","",3],["showexceptions.rb","files/padrino-core/lib/padrino-core/application/showexceptions_rb.html","files/padrino-core/lib/padrino-core/application/showexceptions_rb.html","","",3],["caller.rb","files/padrino-core/lib/padrino-core/caller_rb.html","files/padrino-core/lib/padrino-core/caller_rb.html","","",3],["command.rb","files/padrino-core/lib/padrino-core/command_rb.html","files/padrino-core/lib/padrino-core/command_rb.html","","",3],["loader.rb","files/padrino-core/lib/padrino-core/loader_rb.html","files/padrino-core/lib/padrino-core/loader_rb.html","","",3],["logger.rb","files/padrino-core/lib/padrino-core/logger_rb.html","files/padrino-core/lib/padrino-core/logger_rb.html","","Defines our PADRINO_LOG_LEVEL ",3],["reloader.rb","files/padrino-core/lib/padrino-core/reloader_rb.html","files/padrino-core/lib/padrino-core/reloader_rb.html","","",3],["router.rb","files/padrino-core/lib/padrino-core/router_rb.html","files/padrino-core/lib/padrino-core/router_rb.html","","",3],["tasks.rb","files/padrino-core/lib/padrino-core/tasks_rb.html","files/padrino-core/lib/padrino-core/tasks_rb.html","","",3],["version.rb","files/padrino-core/lib/padrino-core/version_rb.html","files/padrino-core/lib/padrino-core/version_rb.html","","Manages current Padrino version for use in gem generation. We put this in a separate file so you can",3],["README.rdoc","files/padrino-helpers/README_rdoc.html","files/padrino-helpers/README_rdoc.html","","= Application Extensions and Helpers (padrino-helpers)  === Overview  This component provides a great",3],["padrino-helpers.rb","files/padrino-helpers/lib/padrino-helpers_rb.html","files/padrino-helpers/lib/padrino-helpers_rb.html","","",3],["asset_tag_helpers.rb","files/padrino-helpers/lib/padrino-helpers/asset_tag_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/asset_tag_helpers_rb.html","","",3],["dom_helpers.rb","files/padrino-helpers/lib/padrino-helpers/dom_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/dom_helpers_rb.html","","",3],["abstract_form_builder.rb","files/padrino-helpers/lib/padrino-helpers/form_builder/abstract_form_builder_rb.html","files/padrino-helpers/lib/padrino-helpers/form_builder/abstract_form_builder_rb.html","","",3],["standard_form_builder.rb","files/padrino-helpers/lib/padrino-helpers/form_builder/standard_form_builder_rb.html","files/padrino-helpers/lib/padrino-helpers/form_builder/standard_form_builder_rb.html","","",3],["form_helpers.rb","files/padrino-helpers/lib/padrino-helpers/form_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/form_helpers_rb.html","","",3],["format_helpers.rb","files/padrino-helpers/lib/padrino-helpers/format_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/format_helpers_rb.html","","",3],["number_helpers.rb","files/padrino-helpers/lib/padrino-helpers/number_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/number_helpers_rb.html","","",3],["output_helpers.rb","files/padrino-helpers/lib/padrino-helpers/output_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/output_helpers_rb.html","","",3],["render_helpers.rb","files/padrino-helpers/lib/padrino-helpers/render_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/render_helpers_rb.html","","",3],["tag_helpers.rb","files/padrino-helpers/lib/padrino-helpers/tag_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/tag_helpers_rb.html","","",3],["translation_helpers.rb","files/padrino-helpers/lib/padrino-helpers/translation_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/translation_helpers_rb.html","","",3],["README.rdoc","files/padrino-mailer/README_rdoc.html","files/padrino-mailer/README_rdoc.html","","= Simple Mailer Support (padrino-mailer)  === Overview  This component creates an easy and intuitive",3],["padrino-mailer.rb","files/padrino-mailer/lib/padrino-mailer_rb.html","files/padrino-mailer/lib/padrino-mailer_rb.html","","require tilt if available; fall back on bundled version. ",3],["base.rb","files/padrino-mailer/lib/padrino-mailer/base_rb.html","files/padrino-mailer/lib/padrino-mailer/base_rb.html","","",3],["ext.rb","files/padrino-mailer/lib/padrino-mailer/ext_rb.html","files/padrino-mailer/lib/padrino-mailer/ext_rb.html","","",3],["helpers.rb","files/padrino-mailer/lib/padrino-mailer/helpers_rb.html","files/padrino-mailer/lib/padrino-mailer/helpers_rb.html","","",3],["mime.rb","files/padrino-mailer/lib/padrino-mailer/mime_rb.html","files/padrino-mailer/lib/padrino-mailer/mime_rb.html","","",3]]}}